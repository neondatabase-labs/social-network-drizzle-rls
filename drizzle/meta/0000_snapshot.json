{
  "id": "9e320983-4ec8-461d-b994-206963eb3f20",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.chat_messages": {
      "name": "chat_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "chatId": {
          "name": "chatId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sender": {
          "name": "sender",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_messages_chatId_chats_id_fk": {
          "name": "chat_messages_chatId_chats_id_fk",
          "tableFrom": "chat_messages",
          "tableTo": "chats",
          "columnsFrom": ["chatId"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_messages_sender_users_userId_fk": {
          "name": "chat_messages_sender_users_userId_fk",
          "tableFrom": "chat_messages",
          "tableTo": "users",
          "columnsFrom": ["sender"],
          "columnsTo": ["userId"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "((select auth.user_id()) in (select user_id from my_chats_participants where chat_id = \"chat_messages\".\"chatId\"))"
        },
        "chats-policy-insert": {
          "name": "chats-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "((select auth.user_id()) = \"chat_messages\".\"sender\" and (select auth.user_id()) in (select user_id from my_chats_participants where chat_id = \"chat_messages\".\"chatId\"))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_participants": {
      "name": "chat_participants",
      "schema": "",
      "columns": {
        "chatId": {
          "name": "chatId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_participants_chatId_chats_id_fk": {
          "name": "chat_participants_chatId_chats_id_fk",
          "tableFrom": "chat_participants",
          "tableTo": "chats",
          "columnsFrom": ["chatId"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_participants_userId_users_userId_fk": {
          "name": "chat_participants_userId_users_userId_fk",
          "tableFrom": "chat_participants",
          "tableTo": "users",
          "columnsFrom": ["userId"],
          "columnsTo": ["userId"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "chat_participants_chatId_userId_pk": {
          "name": "chat_participants_chatId_userId_pk",
          "columns": ["chatId", "userId"]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "false"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = (select owner_id from chats where id = \"chat_participants\".\"chatId\"))"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = (select owner_id from chats where id = \"chat_participants\".\"chatId\"))",
          "withCheck": "(select auth.user_id() = (select owner_id from chats where id = \"chat_participants\".\"chatId\"))"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = (select owner_id from chats where id = \"chat_participants\".\"chatId\"))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chats": {
      "name": "chats",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chats_ownerId_users_userId_fk": {
          "name": "chats_ownerId_users_userId_fk",
          "tableFrom": "chats",
          "tableTo": "users",
          "columnsFrom": ["ownerId"],
          "columnsTo": ["userId"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "((select auth.user_id()) = \"chats\".\"ownerId\" or (select auth.user_id()) in (select user_id from MY_CHATS_PARTICIPANTS where chat_id = \"chats\".\"id\"))"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = \"chats\".\"ownerId\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"chats\".\"ownerId\")",
          "withCheck": "(select auth.user_id() = \"chats\".\"ownerId\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"chats\".\"ownerId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.comments": {
      "name": "comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "postId": {
          "name": "postId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "comments_postId_posts_id_fk": {
          "name": "comments_postId_posts_id_fk",
          "tableFrom": "comments",
          "tableTo": "posts",
          "columnsFrom": ["postId"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "comments_userId_users_userId_fk": {
          "name": "comments_userId_users_userId_fk",
          "tableFrom": "comments",
          "tableTo": "users",
          "columnsFrom": ["userId"],
          "columnsTo": ["userId"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-anonymous-policy-select": {
          "name": "crud-anonymous-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["anonymous"],
          "using": "true"
        },
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = \"comments\".\"userId\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"comments\".\"userId\")",
          "withCheck": "(select auth.user_id() = \"comments\".\"userId\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"comments\".\"userId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "posts_userId_users_userId_fk": {
          "name": "posts_userId_users_userId_fk",
          "tableFrom": "posts",
          "tableTo": "users",
          "columnsFrom": ["userId"],
          "columnsTo": ["userId"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-anonymous-policy-select": {
          "name": "crud-anonymous-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["anonymous"],
          "using": "true"
        },
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = \"posts\".\"userId\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"posts\".\"userId\")",
          "withCheck": "(select auth.user_id() = \"posts\".\"userId\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"posts\".\"userId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_profiles": {
      "name": "user_profiles",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_profiles_userId_users_userId_fk": {
          "name": "user_profiles_userId_users_userId_fk",
          "tableFrom": "user_profiles",
          "tableTo": "users",
          "columnsFrom": ["userId"],
          "columnsTo": ["userId"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_profiles_userId_unique": {
          "name": "user_profiles_userId_unique",
          "nullsNotDistinct": false,
          "columns": ["userId"]
        }
      },
      "policies": {
        "crud-anonymous-policy-select": {
          "name": "crud-anonymous-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["anonymous"],
          "using": "true"
        },
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = \"user_profiles\".\"userId\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"user_profiles\".\"userId\")",
          "withCheck": "(select auth.user_id() = \"user_profiles\".\"userId\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"user_profiles\".\"userId\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.my_chats_participants": {
      "columns": {
        "chatId": {
          "name": "chatId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "select distinct \"chatId\", \"userId\" from \"chat_participants\" where \"chat_participants\".\"chatId\" in (select \"chatId\" from \"chat_participants\" where \"chat_participants\".\"userId\" = auth.user_id())",
      "name": "my_chats_participants",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
